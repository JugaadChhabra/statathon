# Generated by Django 5.2.5 on 2025-08-14 02:09

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the dataset', max_length=255)),
                ('description', models.TextField(help_text='Description of the dataset contents')),
                ('file_path', models.CharField(help_text='Path to the dataset file', max_length=500)),
                ('schema', models.JSONField(help_text='JSON schema describing the dataset structure')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'datasets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QueryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(help_text='SQL query executed')),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('timeout', 'Timeout')], max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('execution_time', models.FloatField(help_text='Query execution time in seconds')),
                ('row_count', models.IntegerField(help_text='Number of rows returned')),
                ('ip_address', models.GenericIPAddressField(help_text='Client IP address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='queries', to='dataset_app.dataset')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'query_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DatasetAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('viewer', 'Viewer'), ('analyst', 'Analyst'), ('admin', 'Administrator')], default='viewer', max_length=20)),
                ('rate_limit', models.IntegerField(default=100, help_text='Number of queries allowed per hour', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_accesses', to='dataset_app.dataset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dataset_access',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'dataset')},
            },
        ),
        migrations.CreateModel(
            name='DatasetRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('one_to_one', 'One-to-One'), ('one_to_many', 'One-to-Many'), ('many_to_many', 'Many-to-Many')], max_length=20)),
                ('join_conditions', models.JSONField(help_text='JSON describing the join conditions between datasets')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_relationships', to='dataset_app.dataset')),
                ('target_dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_relationships', to='dataset_app.dataset')),
            ],
            options={
                'db_table': 'dataset_relationships',
                'ordering': ['-created_at'],
                'unique_together': {('source_dataset', 'target_dataset')},
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Variable name in the dataset', max_length=255)),
                ('display_name', models.CharField(help_text='Human-readable name for the variable', max_length=255)),
                ('description', models.TextField(help_text='Description of what the variable represents')),
                ('data_type', models.CharField(choices=[('numeric', 'Numeric'), ('categorical', 'Categorical'), ('datetime', 'DateTime'), ('text', 'Text')], max_length=20)),
                ('is_nullable', models.BooleanField(default=True)),
                ('possible_values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, help_text='List of possible values for categorical variables', null=True, size=None)),
                ('min_value', models.FloatField(blank=True, help_text='Minimum value for numeric variables', null=True)),
                ('max_value', models.FloatField(blank=True, help_text='Maximum value for numeric variables', null=True)),
                ('is_sensitive', models.BooleanField(default=False, help_text='Whether this variable contains sensitive data')),
                ('requires_aggregation', models.BooleanField(default=False, help_text='Whether this variable must be aggregated in queries')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='dataset_app.dataset')),
            ],
            options={
                'db_table': 'variables',
                'ordering': ['name'],
                'unique_together': {('dataset', 'name')},
            },
        ),
    ]
