{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/StatHackathon/statathon/app/components/utils/api.ts"],"sourcesContent":["// API utilities for Django backend integration\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:8000';\r\n\r\nexport interface AnalysisOptions {\r\n  survey_name?: string;\r\n  surveyName?: string;\r\n  survey_year?: number;\r\n  surveyYear?: number;\r\n  analysis_type?: string;\r\n  analysisType?: string;\r\n  min_responses?: number;\r\n  minResponses?: number;\r\n  confidence_level?: number;\r\n  confidence?: number;\r\n  question_filter?: string;\r\n  questionFilter?: string;\r\n}\r\n\r\nexport interface BackendAnalysisRequest {\r\n  input_text: string;\r\n  options?: {\r\n    survey_name?: string;\r\n    survey_year?: number;\r\n    analysis_type?: string;\r\n    min_responses?: number;\r\n    confidence_level?: number;\r\n    question_filter?: string;\r\n  };\r\n}\r\n\r\nexport interface BackendAnalysisResponse {\r\n  id: number;\r\n  input_text: string;\r\n  result: string;\r\n  confidence: number;\r\n  explanation_json: {\r\n    top_factors?: string[];\r\n    summary?: string;\r\n    insights?: string[];\r\n    [key: string]: unknown;\r\n  };\r\n  latency_ms: number;\r\n  created_at: string;\r\n}\r\n\r\nexport interface Dataset {\r\n  id: string;\r\n  name: string;\r\n  file: string;\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role: string;\r\n  organization?: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  access: string;\r\n  refresh: string;\r\n  user: User;\r\n}\r\n\r\nexport interface LoginRequest {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterRequest {\r\n  email: string;\r\n  password: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  organization?: string;\r\n  role?: string;\r\n}\r\n\r\nexport interface HealthStatus {\r\n  status: string;\r\n  version: string;\r\n  services: {\r\n    database: string;\r\n    analysis_engine: string;\r\n  };\r\n}\r\n\r\n// Main analysis endpoint - calls Django backend\r\nexport async function analyzeText(input_text: string, options: AnalysisOptions = {}): Promise<BackendAnalysisResponse> {\r\n  try {\r\n    const requestData: BackendAnalysisRequest = {\r\n      input_text,\r\n      options: {\r\n        survey_name: options.survey_name || options.surveyName,\r\n        survey_year: options.survey_year || options.surveyYear,\r\n        analysis_type: options.analysis_type || options.analysisType,\r\n        min_responses: options.min_responses || options.minResponses,\r\n        confidence_level: options.confidence_level || options.confidence,\r\n        question_filter: options.question_filter || options.questionFilter\r\n      }\r\n    };\r\n\r\n    const token = localStorage.getItem('access_token');\r\n    const headers: HeadersInit = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Accept\": \"application/json\"\r\n    };\r\n    \r\n    if (token) {\r\n      headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    console.log('Making API request to:', `${API_BASE_URL}/analysis/analyze/`);\r\n    console.log('Request data:', requestData);\r\n\r\n    const response = await fetch(`${API_BASE_URL}/analysis/analyze/`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify(requestData)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // Try to refresh token\r\n        const refreshed = await refreshToken();\r\n        if (refreshed) {\r\n          return analyzeText(input_text, options); // Retry with new token\r\n        }\r\n        throw new Error('Authentication required');\r\n      }\r\n      const errorText = await response.text();\r\n      throw new Error(`API request failed: ${response.status} ${response.statusText} - ${errorText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('API response:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error in analyzeText:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get analysis history\r\nexport async function getAnalyses(): Promise<BackendAnalysisResponse[]> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/analysis/analyses/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch analyses: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching analyses:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Health check endpoint\r\nexport async function getHealth(): Promise<HealthStatus | null> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/analysis/health/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Health check failed: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error checking health:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Get available survey datasets\r\nexport async function getSurveyDatasets(): Promise<Dataset[]> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/analysis/survey-datasets/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Accept\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch datasets: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching datasets:', error);\r\n    return [{\r\n      id: \"housing-expenditure\",\r\n      name: \"Housing expenditure dataset\",\r\n      file: \"LEVEL - 05 ( Sec 5 & 6).csv\"\r\n    }];\r\n  }\r\n}\r\n\r\n// Auth functions\r\nexport async function login(credentials: LoginRequest): Promise<AuthResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/api/v1/auth/login/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `Login failed: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Store tokens in localStorage\r\n    localStorage.setItem('access_token', data.access);\r\n    localStorage.setItem('refresh_token', data.refresh);\r\n    localStorage.setItem('user', JSON.stringify(data.user));\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error during login:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function register(userData: RegisterRequest): Promise<AuthResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/api/v1/auth/register/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(userData)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `Registration failed: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Store tokens in localStorage\r\n    localStorage.setItem('access_token', data.access);\r\n    localStorage.setItem('refresh_token', data.refresh);\r\n    localStorage.setItem('user', JSON.stringify(data.user));\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error during registration:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function logout(): Promise<void> {\r\n  localStorage.removeItem('access_token');\r\n  localStorage.removeItem('refresh_token');\r\n  localStorage.removeItem('user');\r\n}\r\n\r\nexport async function getCurrentUser(): Promise<User | null> {\r\n  try {\r\n    const token = localStorage.getItem('access_token');\r\n    if (!token) return null;\r\n\r\n    const response = await fetch(`${API_BASE_URL}/api/v1/auth/profile/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // Token expired, try to refresh\r\n        const refreshed = await refreshToken();\r\n        if (refreshed) {\r\n          return getCurrentUser(); // Retry with new token\r\n        }\r\n        logout(); // Clear invalid tokens\r\n        return null;\r\n      }\r\n      throw new Error(`Failed to get user profile: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error getting current user:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function refreshToken(): Promise<boolean> {\r\n  try {\r\n    const refresh = localStorage.getItem('refresh_token');\r\n    if (!refresh) return false;\r\n\r\n    const response = await fetch(`${API_BASE_URL}/api/v1/auth/token/refresh/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ refresh })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      logout(); // Clear invalid tokens\r\n      return false;\r\n    }\r\n\r\n    const data = await response.json();\r\n    localStorage.setItem('access_token', data.access);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error refreshing token:', error);\r\n    logout(); // Clear invalid tokens\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function getStoredUser(): User | null {\r\n  try {\r\n    const userStr = localStorage.getItem('user');\r\n    return userStr ? JSON.parse(userStr) : null;\r\n  } catch (error) {\r\n    console.error('Error parsing stored user:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function isAuthenticated(): boolean {\r\n  return !!localStorage.getItem('access_token');\r\n}\r\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;;;;;;;;;AAC/C,MAAM,eAAe,oEAAwC;AAyFtD,eAAe,YAAY,UAAkB,EAAE,UAA2B,CAAC,CAAC;IACjF,IAAI;QACF,MAAM,cAAsC;YAC1C;YACA,SAAS;gBACP,aAAa,QAAQ,WAAW,IAAI,QAAQ,UAAU;gBACtD,aAAa,QAAQ,WAAW,IAAI,QAAQ,UAAU;gBACtD,eAAe,QAAQ,aAAa,IAAI,QAAQ,YAAY;gBAC5D,eAAe,QAAQ,aAAa,IAAI,QAAQ,YAAY;gBAC5D,kBAAkB,QAAQ,gBAAgB,IAAI,QAAQ,UAAU;gBAChE,iBAAiB,QAAQ,eAAe,IAAI,QAAQ,cAAc;YACpE;QACF;QAEA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,UAAuB;YAC3B,gBAAgB;YAChB,UAAU;QACZ;QAEA,IAAI,OAAO;YACT,QAAQ,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;QAC3C;QAEA,QAAQ,GAAG,CAAC,0BAA0B,GAAG,aAAa,kBAAkB,CAAC;QACzE,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,kBAAkB,CAAC,EAAE;YAChE,QAAQ;YACR;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,uBAAuB;gBACvB,MAAM,YAAY,MAAM;gBACxB,IAAI,WAAW;oBACb,OAAO,YAAY,YAAY,UAAU,uBAAuB;gBAClE;gBACA,MAAM,IAAI,MAAM;YAClB;YACA,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,CAAC,GAAG,EAAE,WAAW;QAChG;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,mBAAmB,CAAC,EAAE;YACjE,QAAQ;YACR,SAAS;gBACP,UAAU;YACZ;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,SAAS,MAAM,EAAE;QAChE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,EAAE;IACX;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,iBAAiB,CAAC,EAAE;YAC/D,QAAQ;YACR,SAAS;gBACP,UAAU;YACZ;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,qBAAqB,EAAE,SAAS,MAAM,EAAE;QAC3D;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,0BAA0B,CAAC,EAAE;YACxE,QAAQ;YACR,SAAS;gBACP,UAAU;YACZ;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,SAAS,MAAM,EAAE;QAChE;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;YAAC;gBACN,IAAI;gBACJ,MAAM;gBACN,MAAM;YACR;SAAE;IACJ;AACF;AAGO,eAAe,MAAM,WAAyB;IACnD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,mBAAmB,CAAC,EAAE;YACjE,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,UAAU;YACZ;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,cAAc,EAAE,SAAS,MAAM,EAAE;QACvE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,+BAA+B;QAC/B,aAAa,OAAO,CAAC,gBAAgB,KAAK,MAAM;QAChD,aAAa,OAAO,CAAC,iBAAiB,KAAK,OAAO;QAClD,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK,IAAI;QAErD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM;IACR;AACF;AAEO,eAAe,SAAS,QAAyB;IACtD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,sBAAsB,CAAC,EAAE;YACpE,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,UAAU;YACZ;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,qBAAqB,EAAE,SAAS,MAAM,EAAE;QAC9E;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,+BAA+B;QAC/B,aAAa,OAAO,CAAC,gBAAgB,KAAK,MAAM;QAChD,aAAa,OAAO,CAAC,iBAAiB,KAAK,OAAO;QAClD,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK,IAAI;QAErD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM;IACR;AACF;AAEO,eAAe;IACpB,aAAa,UAAU,CAAC;IACxB,aAAa,UAAU,CAAC;IACxB,aAAa,UAAU,CAAC;AAC1B;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,CAAC,OAAO,OAAO;QAEnB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,qBAAqB,CAAC,EAAE;YACnE,QAAQ;YACR,SAAS;gBACP,UAAU;gBACV,iBAAiB,CAAC,OAAO,EAAE,OAAO;YACpC;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,gCAAgC;gBAChC,MAAM,YAAY,MAAM;gBACxB,IAAI,WAAW;oBACb,OAAO,kBAAkB,uBAAuB;gBAClD;gBACA,UAAU,uBAAuB;gBACjC,OAAO;YACT;YACA,MAAM,IAAI,MAAM,CAAC,4BAA4B,EAAE,SAAS,MAAM,EAAE;QAClE;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,aAAa,OAAO,CAAC;QACrC,IAAI,CAAC,SAAS,OAAO;QAErB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,2BAA2B,CAAC,EAAE;YACzE,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,UAAU;YACZ;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAQ;QACjC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,UAAU,uBAAuB;YACjC,OAAO;QACT;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,aAAa,OAAO,CAAC,gBAAgB,KAAK,MAAM;QAEhD,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,UAAU,uBAAuB;QACjC,OAAO;IACT;AACF;AAEO,SAAS;IACd,IAAI;QACF,MAAM,UAAU,aAAa,OAAO,CAAC;QACrC,OAAO,UAAU,KAAK,KAAK,CAAC,WAAW;IACzC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;AACF;AAEO,SAAS;IACd,OAAO,CAAC,CAAC,aAAa,OAAO,CAAC;AAChC","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/StatHackathon/statathon/app/components/context/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User, AuthResponse, LoginRequest, RegisterRequest, login, register, logout, getCurrentUser, getStoredUser, isAuthenticated } from '../utils/api';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  login: (credentials: LoginRequest) => Promise<void>;\r\n  register: (userData: RegisterRequest) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  refreshUser: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const initializeAuth = async () => {\r\n    try {\r\n      // Check if user is stored locally\r\n      const storedUser = getStoredUser();\r\n      if (storedUser && isAuthenticated()) {\r\n        setUser(storedUser);\r\n        // Verify with server\r\n        const currentUser = await getCurrentUser();\r\n        if (currentUser) {\r\n          setUser(currentUser);\r\n        } else {\r\n          setUser(null);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth initialization error:', error);\r\n      setUser(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (credentials: LoginRequest): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response: AuthResponse = await login(credentials);\r\n      setUser(response.user);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (userData: RegisterRequest): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response: AuthResponse = await register(userData);\r\n      setUser(response.user);\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async (): Promise<void> => {\r\n    try {\r\n      await logout();\r\n      setUser(null);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  };\r\n\r\n  const refreshUser = async (): Promise<void> => {\r\n    try {\r\n      const currentUser = await getCurrentUser();\r\n      setUser(currentUser);\r\n    } catch (error) {\r\n      console.error('Refresh user error:', error);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isLoading,\r\n    isAuthenticated: !!user,\r\n    login: handleLogin,\r\n    register: handleRegister,\r\n    logout: handleLogout,\r\n    refreshUser\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAeA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,iBAAiB;QACrB,IAAI;YACF,kCAAkC;YAClC,MAAM,aAAa,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD;YAC/B,IAAI,cAAc,CAAA,GAAA,iIAAA,CAAA,kBAAe,AAAD,KAAK;gBACnC,QAAQ;gBACR,qBAAqB;gBACrB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;gBACvC,IAAI,aAAa;oBACf,QAAQ;gBACV,OAAO;oBACL,QAAQ;gBACV;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,QAAQ;QACV,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,cAAc,OAAO;QACzB,IAAI;YACF,aAAa;YACb,MAAM,WAAyB,MAAM,CAAA,GAAA,iIAAA,CAAA,QAAK,AAAD,EAAE;YAC3C,QAAQ,SAAS,IAAI;QACvB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,aAAa;YACb,MAAM,WAAyB,MAAM,CAAA,GAAA,iIAAA,CAAA,WAAQ,AAAD,EAAE;YAC9C,QAAQ,SAAS,IAAI;QACvB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,CAAA,GAAA,iIAAA,CAAA,SAAM,AAAD;YACX,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;QACjC;IACF;IAEA,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;YACvC,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,QAAQ;QACV;IACF;IAEA,MAAM,QAAyB;QAC7B;QACA;QACA,iBAAiB,CAAC,CAAC;QACnB,OAAO;QACP,UAAU;QACV,QAAQ;QACR;IACF;IAEA,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/StatHackathon/statathon/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/StatHackathon/statathon/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/StatHackathon/statathon/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}